// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ClashRoyaleApi.API.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PlayerDetail : PlayerBase
    {
        /// <summary>
        /// Initializes a new instance of the PlayerDetail class.
        /// </summary>
        public PlayerDetail()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlayerDetail class.
        /// </summary>
        public PlayerDetail(string tag = default(string), string name = default(string), int? expLevel = default(int?), int? trophies = default(int?), Arena arena = default(Arena), int? bestTrophies = default(int?), int? wins = default(int?), int? losses = default(int?), int? battleCount = default(int?), int? threeCrownWins = default(int?), int? challengeCardsWon = default(int?), int? challengeMaxWins = default(int?), int? tournamentCardsWon = default(int?), int? tournamentBattleCount = default(int?), string role = default(string), int? donations = default(int?), int? donationsReceived = default(int?), int? totalDonations = default(int?), int? warDayWins = default(int?), int? clanCardsCollected = default(int?), ClanBase clan = default(ClanBase), PlayerDetailLeagueStatistics leagueStatistics = default(PlayerDetailLeagueStatistics), IList<PlayerDetailAchievement> achievements = default(IList<PlayerDetailAchievement>), IList<CardPlayer> cards = default(IList<CardPlayer>), CardBase currentFavouriteCard = default(CardBase))
            : base(tag, name, expLevel, trophies, arena)
        {
            BestTrophies = bestTrophies;
            Wins = wins;
            Losses = losses;
            BattleCount = battleCount;
            ThreeCrownWins = threeCrownWins;
            ChallengeCardsWon = challengeCardsWon;
            ChallengeMaxWins = challengeMaxWins;
            TournamentCardsWon = tournamentCardsWon;
            TournamentBattleCount = tournamentBattleCount;
            Role = role;
            Donations = donations;
            DonationsReceived = donationsReceived;
            TotalDonations = totalDonations;
            WarDayWins = warDayWins;
            ClanCardsCollected = clanCardsCollected;
            Clan = clan;
            LeagueStatistics = leagueStatistics;
            Achievements = achievements;
            Cards = cards;
            CurrentFavouriteCard = currentFavouriteCard;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bestTrophies")]
        public int? BestTrophies { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "wins")]
        public int? Wins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "losses")]
        public int? Losses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "battleCount")]
        public int? BattleCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "threeCrownWins")]
        public int? ThreeCrownWins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "challengeCardsWon")]
        public int? ChallengeCardsWon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "challengeMaxWins")]
        public int? ChallengeMaxWins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tournamentCardsWon")]
        public int? TournamentCardsWon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tournamentBattleCount")]
        public int? TournamentBattleCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public string Role { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "donations")]
        public int? Donations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "donationsReceived")]
        public int? DonationsReceived { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalDonations")]
        public int? TotalDonations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warDayWins")]
        public int? WarDayWins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clanCardsCollected")]
        public int? ClanCardsCollected { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clan")]
        public ClanBase Clan { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "leagueStatistics")]
        public PlayerDetailLeagueStatistics LeagueStatistics { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "achievements")]
        public IList<PlayerDetailAchievement> Achievements { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cards")]
        public IList<CardPlayer> Cards { get; set; }


        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currentDeck")]
        public IList<CardPlayer> CurrentCards { get; set; }
        

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currentFavouriteCard")]
        public CardBase CurrentFavouriteCard { get; set; }

        public override string ToString()
        {
            return $"{Name} = {Trophies}";
        }
    }
}
